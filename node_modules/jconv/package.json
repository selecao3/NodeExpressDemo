{
  "_from": "jconv",
  "_id": "jconv@0.1.5",
  "_inBundle": false,
  "_integrity": "sha1-xlDtukzCzm3Skr85ELEjQzxLR/U=",
  "_location": "/jconv",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "jconv",
    "fetchSpec": "latest",
    "name": "jconv",
    "raw": "jconv",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/jconv/-/jconv-0.1.5.tgz",
  "_shasum": "c650edba4cc2ce6dd292bf3910b123433c4b47f5",
  "_shrinkwrap": null,
  "_spec": "jconv",
  "_where": "C:\\Users\\kazuha\\develop\\Node\\node_demo01",
  "auther": "narirou <narirou.github@gmail.com>",
  "bugs": {
    "url": "https://github.com/narirou/jconv/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "Pure JavaScript Iconv for Japanese encodings. (Shift_JIS, ISO-2022-JP, EUC-JP, UTF-8, UCS-2)",
  "devDependencies": {
    "async": "*",
    "benchmark": "*",
    "grunt": "~0.4.2",
    "grunt-closurecompiler": "*",
    "grunt-mocha-test": "*",
    "iconv": "*",
    "should": "*"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "homepage": "https://github.com/narirou/jconv#readme",
  "keywords": [
    "charset",
    "encode",
    "encoding",
    "iconv",
    "japanese"
  ],
  "license": "MIT",
  "main": "jconv.js",
  "name": "jconv",
  "optionalDependencies": {},
  "readme": "jconv\r\n====================\r\n\r\n> Pure JavaScript Iconv for Japanese encodings.\r\n\r\n[![Build Status](https://secure.travis-ci.org/narirou/jconv.png?branch=master)](https://travis-ci.org/narirou/jconv)\r\n[![NPM version](https://badge.fury.io/js/jconv.png)](http://badge.fury.io/js/jconv)\r\n\r\n * This module supported the encodings commonly used in Japanese Language:  \r\n   *Shift_JIS(CP932), ISO-2022-JP(-1), EUC-JP, UTF8, UNICODE(UCS2)* conversion.\r\n * Pure Javascript, no need to compile.\r\n * Much faster than [node-iconv](https://github.com/bnoordhuis/node-iconv).\r\n\r\n[[Japanese 日本語]](https://github.com/narirou/jconv/blob/master/READMEja.md)\r\n\r\n## Installation\r\n```bash\r\n$ npm install jconv\r\n```\r\n\r\n## Usage\r\nFor example simply convert from **EUC-JP** to **Shift_JIS**:\r\n\r\n```javascript\r\nvar jconv = require( 'jconv' );\r\n\r\nvar SJISBuffer = jconv.convert( EUCJPBuffer, 'EUCJP', 'SJIS' );\r\n```\r\n\r\nAlso available **iconv-lite** syntax:\r\n\r\n```javascript\r\nvar str = jconv.decode( buffer, fromEncoding );\r\n\r\nvar buf = jconv.encode( 'string', toEncoding );\r\n```\r\n\r\n## API\r\n * **jconv( input, fromEncoding, toEncoding )**  \r\n * **jconv.convert( input, fromEncoding, toEncoding )**  \r\n    * `input` {Buffer} or {String}  \r\n    * `fromEncoding`, `toEncoding` {String}:  \r\n       *Shift_JIS(SJIS), ISO-2022-JP(JIS), EUCJP, UTF8, UNICODE(UCS2, UTF16LE)* are available.  \r\n    * `return` {Buffer}  \r\n\r\n * **jconv.decode( inputBuffer, fromEncoding )**  \r\n    * `return` {String}  \r\n\r\n * **jconv.encode( inputString, toEncoding )**  \r\n    * `return` {Buffer}  \r\n\r\n * **jconv.encodingExists( encodingName )**  \r\n    * `return` {Boolean}\r\n\r\n## Performance\r\nComparison with node-iconv@2.0.7 by converting [Japanese text](http://www.aozora.gr.jp/cards/000148/files/773_14560.html)\r\nusing [Benchmark.js](https://github.com/bestiejs/benchmark.js).  \r\nEnvironment is *Windows7, core i5 2405-S, mem8G, Node 0.10.22*.\r\n(Please check on your hardware.)  \r\n`Gray`: iconv, `Blue`: jconv (higher is better)  \r\n\r\n![jconv - encoding speed test chart](https://raw.github.com/narirou/jconv/master/test/chart/speedLog.png)\r\n[[latest log]](https://github.com/narirou/jconv/blob/master/test/chart/speedLog.txt)  \r\n\r\n## Encodings\r\n * Supported: Shift_JIS(CP932), ISO-2022-JP(-1), EUC-JP, UTF8, UNICODE(UCS2).  \r\n \r\n * Supported Windows Dependent Characters <-> JIS Conversion.  \r\n[(problem details)](http://support.microsoft.com/default.aspx?scid=kb;ja;JP170559)  \r\n\r\n * \"JIS X 0208\", \"JIS X 0212\" and \"CP932\" have the Unicode Mapping Table Differences,\r\n  so the specific characters ( ～￠￡∥ etc... ) cannot be round-trip converted by default.  \r\n This module corrects this difference as much as possible when converting.  \r\n[(problem details)](http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html)  \r\n\r\n## Development \r\n * Clone Repository  \r\n```\r\ngit clone https://github.com/narirou/jconv.git  \r\ncd jconv  \r\nnpm install\r\n```\r\n\r\n * Generate Tables  \r\n```\r\n# generates the unicode mapping table module in \"tables\" folder.\r\nnode generators/generate-source  \r\nnode generators/generate\r\n```\r\n\r\n * Test\r\n```\r\ngrunt test\r\n```\r\n\r\n * Speed Test  \r\n```\r\n# First, minify the script by closure-compiler.\r\ngrunt minify\r\n```\r\n``` \r\nnode test/speed  \r\n# This results are visualized by chart.js.  \r\n# Plese open \"chart/index.html\".\r\n```\r\n\r\n## Based on\r\n * [iconv-lite](https://github.com/ashtuchkin/iconv-lite) by ashtuchkin.\r\n * [Encoding.js](https://github.com/polygonplanet/Unzipper.js) by polygonplanet.\r\n * [iconv-js](https://github.com/Hikaru02/iconv-js) by Hikaru02.\r\n * [node-iconv](https://github.com/bnoordhuis/node-iconv) by bnoordhuis.\r\n * [libiconv-1.9.1-ja-patch Description](http://www2d.biglobe.ne.jp/~msyk/software/libiconv-1.9.1-patch.html) by 森山 将之.\r\n\r\nThank you so much!\r\n\r\n## Note\r\nPull requests are welcome.\r\n\r\n## Todo\r\n * Streaming API support\r\n * Support more encodings and languages.\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/narirou/jconv.git"
  },
  "scripts": {
    "test": "grunt test"
  },
  "version": "0.1.5"
}
